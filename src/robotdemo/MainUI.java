/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package robotdemo;

import java.awt.AWTException;
import static java.awt.Frame.ICONIFIED;
import static java.awt.Frame.MAXIMIZED_BOTH;
import static java.awt.Frame.NORMAL;
import java.awt.Image;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowStateListener;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.UIManager;

/**
 *
 * @author Madhuri
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    AutomatedRobot ar;
    JNativeHookExample jnae;
    SystemTray tray;
    TrayIcon trayIcon;
    
    public MainUI() throws IOException, AWTException 
    {
        
        initComponents();
        ar=new AutomatedRobot();
        jnae=new JNativeHookExample(ar);
        
        /******************************************************************/
        System.out.println("creating instance");
        try
        {
            System.out.println("setting look and feel");
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch(Exception e)
        {
            System.out.println("Unable to set LookAndFeel");
        }
        if(SystemTray.isSupported())
        {
            System.out.println("system tray supported");
            tray=SystemTray.getSystemTray();

            Image image=Toolkit.getDefaultToolkit().getImage("icon.png");
            System.out.println("LOCATION :"+image);

            ActionListener exitListener=new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    System.out.println("Exiting....");
                    System.exit(0);
                }
            };

            PopupMenu popup=new PopupMenu();
            MenuItem defaultItem=new MenuItem("Exit");
            defaultItem.addActionListener(exitListener);
            popup.add(defaultItem);
            defaultItem=new MenuItem("Open");

            defaultItem.addActionListener(new ActionListener()
            {
                @Override
                public void actionPerformed(ActionEvent e) 
                {
                    setVisible(true);
                    setExtendedState(JFrame.NORMAL);
                }
            });

            popup.add(defaultItem);
            trayIcon=new TrayIcon(image, "SystemTray Demo", popup);
            trayIcon.setImageAutoSize(true);
        }
        else
        {
            System.out.println("system tray not supported");
        }
        addWindowStateListener(new WindowStateListener() 
        {
            @Override
            public void windowStateChanged(WindowEvent e) 
            {
                if(e.getNewState()==7)
                {
                    try
                    {
                        tray.add(trayIcon);
                        setVisible(false);
                        System.out.println("added to SystemTray");
                    }
                    catch(AWTException ex)
                    {
                        System.out.println("unable to add to system tray");
                    }
                }
                if(e.getNewState()==MAXIMIZED_BOTH)
                {
                    tray.remove(trayIcon);
                    setVisible(true);
                    System.out.println("Tray icon removed");
                }
                if(e.getNewState()==NORMAL)
                {
                    tray.remove(trayIcon);
                    setVisible(true);
                    System.out.println("Tray icon removed");
                }
            }
        });
        setIconImage(Toolkit.getDefaultToolkit().getImage("icon.png"));

        setVisible(true);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        /******************************************************************/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        help = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        start_action = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        start_listener = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        start_record = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 1, 12)); // NOI18N
        jLabel1.setText("Automated Robot");

        jLabel2.setText("We will guide you till the End. Please follow the below instructions !");

        help.setText("HELP");

        jLabel3.setText("Moke Repeat Count");

        start_action.setText("START ACTION");
        start_action.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_actionActionPerformed(evt);
            }
        });

        jLabel4.setText("For Starting  Moke Record ");

        start_listener.setText("SUBMIT");
        start_listener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_listenerActionPerformed(evt);
            }
        });

        jLabel5.setText("For Aborting the Action press (CTRL +F11) !");

        start_record.setLabel("Start Record");
        start_record.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_recordActionPerformed(evt);
            }
        });

        jLabel6.setText("For Stopping Moke Record  Press CTRL+Q ( The Interface available again ) !");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                        .addComponent(help))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(29, 29, 29)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(start_action))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                                .addComponent(start_listener)
                                .addGap(25, 25, 25))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(start_record, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE))
                            .addComponent(jLabel6))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(help))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(start_listener))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(start_record))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(start_action)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(20, 20, 20))
        );

        jLabel1.getAccessibleContext().setAccessibleName("title");
        jLabel2.getAccessibleContext().setAccessibleName("message");
        jTextField1.getAccessibleContext().setAccessibleName("repeat_count");
        start_action.getAccessibleContext().setAccessibleName("start_action");
        start_record.getAccessibleContext().setAccessibleName("start_record");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void start_actionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_actionActionPerformed
        //this.setState(this.ICONIFIED);
        try
        {
            tray.add(trayIcon);
            setVisible(false);
            System.out.println("added to SystemTray");
        }
        catch (AWTException ex)
        {
            System.out.println("unable to add to tray");
        }
        int repetition_cout=Integer.parseInt(this.jTextField1.getText()); 
        if(jnae!=null)
        {
            jnae.startRoboActivity(repetition_cout);
            System.out.println("RETURNED");
        }
        tray.remove(trayIcon);
        setVisible(true);
        System.out.println("Tray icon removed");
    }//GEN-LAST:event_start_actionActionPerformed

    private void start_listenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_listenerActionPerformed
        System.out.println("MOKE LISTENING STARTED");
        jnae.startMokeListener();
        System.out.println("MOKE LISTENING ENDED !");
    }//GEN-LAST:event_start_listenerActionPerformed

    private void start_recordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_recordActionPerformed
        try
        {
            tray.add(trayIcon);
            setVisible(false);
            System.out.println("added to SystemTray");
        }
        catch (AWTException ex)
        {
            System.out.println("unable to add to tray");
        }
        jnae.isloadingdata=true;
        while(jnae.isloadingdata)
        {
            if(!jnae.isloadingdata)
                break;
        }
        tray.remove(trayIcon);
        setVisible(true);
        System.out.println("Tray icon removed");
    }//GEN-LAST:event_start_recordActionPerformed

    /**                                                                     
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainUI().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (AWTException ex) {
                    Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton start_action;
    private javax.swing.JButton start_listener;
    private javax.swing.JButton start_record;
    // End of variables declaration//GEN-END:variables
}
